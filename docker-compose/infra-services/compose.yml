services:
  cloudflare-ddns-root:
    image: oznu/cloudflare-ddns
    container_name: cloudflare-ddns-root
    restart: unless-stopped
    environment:
      - API_KEY=lLlS7TYLNGoGajz7__ZVxNlSH5O18ZqxmMaGlt50
      - ZONE=kdrisc01.uk
      - SUBDOMAIN=@
      - PROXIED=true
      - TZ=America/Chicago

  cloudflare-ddns-wildcard:
    image: oznu/cloudflare-ddns
    container_name: cloudflare-ddns-wildcard
    restart: unless-stopped
    environment:
      - API_KEY=lLlS7TYLNGoGajz7__ZVxNlSH5O18ZqxmMaGlt50
      - ZONE=kdrisc01.uk
      - SUBDOMAIN=*
      - PROXIED=true
      - TZ=America/Chicago

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    environment:
      - TZ=America/Chicago
      - PUID=1111
      - PGID=1111
    volumes:
      - /opt/appdata/npm:/data
      - /opt/appdata/letsencrypt:/etc/letsencrypt

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /opt/appdata/prometheus/config:/etc/prometheus
      - /opt/appdata/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9191:9090"
    restart: unless-stopped

  influxdb:
    image: influxdb:2
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=kdrisc01
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=homelab
      - DOCKER_INFLUXDB_INIT_BUCKET=proxmox
      - DOCKER_INFLUXDB_INIT_RETENTION=90d
    volumes:
      - /opt/appdata/influxdb:/var/lib/influxdb2
    ports:
      - "8086:8086"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - /opt/appdata/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    ports:
      - "9292:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      TZ: "America/Chicago"
      WATCHTOWER_SCHEDULE: 0 0 3 * * *
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: pushover://shoutrrr:auuu5h8i6nq8ybfitcxcvgy9y4tpa8@unz3irft9xy83syphaofwhn8cx9zb2
      WATCHTOWER_NOTIFICATION_TEMPLATE: '{{.Time}}: {{.ContainerName}} updated from {{.ImageOld}} to {{.ImageNew}} (ID: {{.ImageID}})'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped